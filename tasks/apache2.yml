---
- name: "Register if module is already loaded"
  ansible.builtin.shell: "/usr/sbin/apache2ctl -M | grep cloudflare"
  register: mod_cloudflare
  failed_when: mod_cloudflare.rc > 1
  changed_when: false
  tags:
    - cloudflare

- name: "Register if module is already available"
  ansible.builtin.shell: "ls /etc/apache2/mods-available | grep cloudflare"
  register: is_mod_cloudflare_available
  failed_when: mod_cloudflare.rc > 1
  changed_when: false
  tags:
    - cloudflare

- name: "Register if module configuration is already installed"
  ansible.builtin.shell: "ls /etc/apache2/conf-enabled | grep cloudflare.conf"
  register: is_mod_cloudflare_conf_enabled
  failed_when: is_mod_cloudflare_conf_enabled.rc > 1
  changed_when: false
  tags:
    - cloudflare

- name: "Ensure dependencies are installed"
  ansible.builtin.apt:
    name:
      - libtool
      - apache2-dev
    state: present
    update_cache: true
    cache_valid_time: 3600
  become: true
  when: (mod_cloudflare.rc == 1) and (is_mod_cloudflare_available.rc == 1)
  tags:
    - cloudflare

- name: "Clone source code from github cloudflare organization"
  ansible.builtin.git:
    repo: https://github.com/cloudflare/mod_cloudflare.git
    dest: /tmp/mod_cloudflare
  when: (mod_cloudflare.rc == 1) and (is_mod_cloudflare_available.rc == 1)
  tags:
    - cloudflare

- name: "Create cloudflare module"
  ansible.builtin.shell: "apxs -a -i -c mod_cloudflare.c"
  become: true
  args:
    chdir: /tmp/mod_cloudflare
  when: (mod_cloudflare.rc == 1) and (is_mod_cloudflare_available.rc == 1)
  notify: reload server
  tags:
    - cloudflare

- name: "Install cloudflare module configuration"
  ansible.builtin.template:
    src: cloudflare.conf.j2
    dest: /etc/apache2/conf-available/cloudflare.conf
  become: true
  notify: reload server
  when: ansible_cloudflare_additional_trusted_ips|length > 0
  tags:
    - cloudflare

- name: "Enable cloudflare module configuration"
  ansible.builtin.command: "a2enconf cloudflare"
  notify: reload server
  when: (ansible_cloudflare_additional_trusted_ips|length > 0) and (is_mod_cloudflare_conf_enabled.rc == 1)
  tags:
    - cloudflare

- name: "Clean folders"
  ansible.builtin.file:
    path: /tmp/mod_cloudflare
    state: absent
  when: (mod_cloudflare.rc == 1) and (is_mod_cloudflare_available.rc == 1)
  tags:
    - cloudflare
